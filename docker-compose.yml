version: '3'
services:
  proxy-checker:
    build: proxy-checker
    container_name: proxy-checker
    ports:
      - "8023:80"
    expose:
      - "80"
    environment:
      # - VIRTUAL_HOST=david0403.site
      # - VIRTUAL_PORT=8000
      # - HTTP_PORT=8000
      - VIRTUAL_HOST=david0403.site
      - VIRTUAL_PORT=80
    restart: unless-stopped

  app:
    container_name: proxy-manager
    image: 'jc21/nginx-proxy-manager:latest'
    ports:
      - '80:80'
      - '8181:81'
      - '443:443'
    volumes:
      - ./config.json:/app/config/production.json
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    restart: unless-stopped
    depends_on:
      - db

  db:
    image: 'yobasystems/alpine-mariadb:latest'
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
    volumes:
      - ./data/mysql:/var/lib/mysql
    restart: unless-stopped

  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: always
    expose:
      - 9000
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    container_name: cadvisor
    expose:
    - 8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    expose:
    - 9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
    - cadvisor

  grafana:
    image: grafana/grafana
    container_name: grafana
    expose:
    - 3000
    volumes:
    - ./data:/var/lib/grafana
    restart: always
    depends_on:
    - prometheus

volumes:
  portainer_data:

networks:
  default:
    name: multi-domain
    external: true
